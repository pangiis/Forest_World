using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class ActionController : MonoBehaviour
{   
    //필요한 컴포넌트
    [SerializeField]
    private Text actionText;

    [SerializeField]
    private float range; 

    private bool pickupActivated = false; 
    private bool dissolveActivated = false;
    private RaycastHit hitInfo; 
    private bool isDissolving = false;  
    [SerializeField]
    private WeaponManager theWeaponManager;
    
    [SerializeField]
    private LayerMask layerMask;
    [SerializeField]
    private Transform tf_MeatDissolveTool;  
                                          
    [SerializeField]
    private string sound_meat; 
   

    [SerializeField]
    private Inventory theInventory;

    // Update is called once per frame
    void Update()
    {
      
        TryAction();
        CheckItem();
    }

    //아이템 주울 수 있는 상태인지를 검사
    private void TryAction()
    {
        if (Input.GetKeyDown(KeyCode.E))   
        {
            
            CheckItem();
            CanPickUp(); 
           
        }
    }
   //아이템 획득 텍스트 활성화
    private void ItemInfoAppear()
    {
        pickupActivated = true;
        actionText.gameObject.SetActive(true);
        actionText.text = hitInfo.transform.GetComponent<ItemPickUp>().item.itemName + " 획득 " + "<color=yellow>" + "(E)" + "</color>";
    }
   
    private void ItemInfoDisappear()
    {
        pickupActivated = false;
        actionText.gameObject.SetActive(false);
    }
    //아이템 줍기
    private void CanPickUp()
    {
        if (pickupActivated)
        {
            if (hitInfo.transform != null)
            {
               // Debug.Log(hitInfo.transform.GetComponent<ItemPickUp>().item.itemName + " 획득 했습니다.");
                theInventory.AcquireItem(hitInfo.transform.GetComponent<ItemPickUp>().item);
                Destroy(hitInfo.transform.gameObject);
                ItemInfoDisappear();
            }
        }
    }
    // 아이템이 사정 거리 안에 있는지를 체크
    private void CheckItem()
    {
        if (Physics.Raycast(transform.position, transform.TransformDirection(Vector3.forward), out hitInfo, range, layerMask))
        {
            if (hitInfo.transform.tag == "Item")
            {
                ItemInfoAppear();
            }
        }
        else
            InfoDisappear();
    }
    //아이템 비활성화
    private void InfoDisappear()
    {
        pickupActivated = false;
        dissolveActivated = false;
        actionText.gameObject.SetActive(false);
    }

    
    }


